[H[JStarting...>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> clean .dot and .ps files
>>> Compiling
>>> Executing
Soot started on Thu Jun 09 01:34:53 EDT 2016
Warning: soot.toolkits.graph.ExceptionalUnitGraph is a phantom class!
Warning: com.microsoft.z3.BoolExpr is a phantom class!
Warning: soot.Unit is a phantom class!
Warning: com.microsoft.z3.InterpolationContext is a phantom class!
Warning: com.microsoft.z3.Solver is a phantom class!
Warning: com.microsoft.z3.Status is a phantom class!
Warning: com.microsoft.z3.enumerations.Z3_lbool is a phantom class!
Warning: com.microsoft.z3.Params is a phantom class!
Warning: com.microsoft.z3.InterpolationContext$ComputeInterpolantResult is a phantom class!
Warning: com.microsoft.z3.Expr is a phantom class!
Warning: com.microsoft.z3.Sort is a phantom class!
Warning: com.microsoft.z3.IntExpr is a phantom class!
Warning: com.microsoft.z3.IntNum is a phantom class!
Warning: soot.Body is a phantom class!
Warning: soot.SootMethod is a phantom class!
Warning: soot.Value is a phantom class!
Warning: soot.Local is a phantom class!
Warning: soot.Type is a phantom class!
Warning: soot.jimple.AnyNewExpr is a phantom class!
Warning: soot.jimple.NewExpr is a phantom class!
Warning: soot.jimple.NewArrayExpr is a phantom class!
Warning: soot.jimple.NewMultiArrayExpr is a phantom class!
Warning: soot.jimple.BinopExpr is a phantom class!
Warning: soot.jimple.internal.JAssignStmt is a phantom class!
Warning: soot.jimple.InvokeStmt is a phantom class!
Warning: soot.jimple.AssignStmt is a phantom class!
Warning: soot.jimple.InvokeExpr is a phantom class!
Warning: soot.jimple.ArrayRef is a phantom class!
Warning: com.microsoft.z3.ArrayExpr is a phantom class!
Warning: com.microsoft.z3.IntSort is a phantom class!
Warning: soot.jimple.IntConstant is a phantom class!
Warning: com.microsoft.z3.ArraySort is a phantom class!
Warning: soot.jimple.NeExpr is a phantom class!
Warning: soot.RefType is a phantom class!
Warning: soot.jimple.NullConstant is a phantom class!
Warning: com.microsoft.z3.Symbol is a phantom class!
Warning: soot.jimple.FieldRef is a phantom class!
Warning: soot.jimple.Constant is a phantom class!
Warning: soot.jimple.GeExpr is a phantom class!
Warning: soot.jimple.internal.JNewExpr is a phantom class!
Warning: soot.jimple.LtExpr is a phantom class!
Warning: soot.jimple.GotoStmt is a phantom class!
Warning: soot.jimple.EqExpr is a phantom class!
Warning: com.microsoft.z3.UninterpretedSort is a phantom class!
Warning: soot.jimple.VirtualInvokeExpr is a phantom class!
Warning: com.microsoft.z3.StringSymbol is a phantom class!
Warning: soot.shimple.PhiExpr is a phantom class!
Warning: soot.jimple.LeExpr is a phantom class!
Warning: soot.jimple.CastExpr is a phantom class!
Warning: soot.toolkits.scalar.ValueUnitPair is a phantom class!
Warning: soot.jimple.IfStmt is a phantom class!
Warning: soot.jimple.InstanceFieldRef is a phantom class!
Warning: soot.jimple.IdentityStmt is a phantom class!
Warning: com.microsoft.z3.ArithExpr is a phantom class!
Warning: soot.RefLikeType is a phantom class!
Warning: soot.ArrayType is a phantom class!
Warning: soot.IntegerType is a phantom class!
Warning: soot.jimple.StaticFieldRef is a phantom class!
Warning: soot.jimple.Stmt is a phantom class!
Warning: soot.PrimType is a phantom class!
Warning: soot.jimple.StringConstant is a phantom class!
Warning: soot.jimple.AddExpr is a phantom class!
Warning: soot.jimple.GtExpr is a phantom class!
Warning: soot.BodyTransformer is a phantom class!
Warning: soot.Transform is a phantom class!
Warning: soot.PackManager is a phantom class!
Warning: soot.Pack is a phantom class!
Warning: soot.options.Options is a phantom class!
Warning: soot.Main is a phantom class!
Warning: soot.Transformer is a phantom class!
Transforming dotty.CfgConverter... 
Transforming infoFlow.CoverRelation... 
Transforming infoFlow.Edge... 
Transforming infoFlow.ErrorLable... 
Transforming infoFlow.exception.CreateZ3ScriptFailedException... 
Transforming infoFlow.exception.ErrorLocationNotFoundException... 
Transforming infoFlow.exception.MainFunctionNotFoundException... 
Transforming infoFlow.InterpolationHandler... 
Transforming infoFlow.LogUtils... 
Transforming infoFlow.NewSort... 
Transforming infoFlow.ProgramTree... 
Transforming infoFlow.UnitController... 
Transforming infoFlow.Vertex... 
Transforming infoFlow.Z3ArrayHandler... 
Transforming infoFlow.Z3ScriptHandler... 
Transforming RecordPeekMemoryAndTime.testDriver... 
Transforming safetyChecker.SafetyInitializerW... 
Transforming safetyTestCode.arraytest.Test1... 
Transforming safetyTestCode.iftest.Test1... 
Transforming safetyTestCode.iftest.Test2... 
Transforming safetyTestCode.iftest.Test3... 
Transforming safetyTestCode.iftest.Test4... 
Transforming safetyTestCode.whiletest.Test1... 
Transforming safetyTester.arraytest.Tester1$1... 
Transforming safetyTester.arraytest.Tester1... 
Transforming safetyTester.iftest.Tester1$1... 
Transforming safetyTester.iftest.Tester1... 
Transforming safetyTester.iftest.Tester2$1... 
Transforming safetyTester.iftest.Tester2... 
Transforming safetyTester.iftest.Tester3$1... 
Transforming safetyTester.iftest.Tester3... 
Transforming safetyTester.iftest.Tester4$1... 
Transforming safetyTester.iftest.Tester4... 
Transforming safetyTester.whiletest.Tester1$1... 
Transforming safetyTester.whiletest.Tester1... 
Transforming SelfCompositionTest.NoLeak1$1... 
Transforming SelfCompositionTest.NoLeak1... 
Writing to src/output/safetyTest/dotty.CfgConverter.shimple
Writing to src/output/safetyTest/infoFlow.CoverRelation.shimple
Writing to src/output/safetyTest/infoFlow.Edge.shimple
Writing to src/output/safetyTest/infoFlow.ErrorLable.shimple
Writing to src/output/safetyTest/infoFlow.exception.CreateZ3ScriptFailedException.shimple
Writing to src/output/safetyTest/infoFlow.exception.ErrorLocationNotFoundException.shimple
Writing to src/output/safetyTest/infoFlow.exception.MainFunctionNotFoundException.shimple
Writing to src/output/safetyTest/infoFlow.InterpolationHandler.shimple
Writing to src/output/safetyTest/infoFlow.LogUtils.shimple
Writing to src/output/safetyTest/infoFlow.NewSort.shimple
Writing to src/output/safetyTest/infoFlow.ProgramTree.shimple
Writing to src/output/safetyTest/infoFlow.UnitController.shimple
Writing to src/output/safetyTest/infoFlow.Vertex.shimple
Writing to src/output/safetyTest/infoFlow.Z3ArrayHandler.shimple
Writing to src/output/safetyTest/infoFlow.Z3ScriptHandler.shimple
Writing to src/output/safetyTest/RecordPeekMemoryAndTime.testDriver.shimple
Writing to src/output/safetyTest/safetyChecker.SafetyInitializerW.shimple
Writing to src/output/safetyTest/safetyTestCode.arraytest.Test1.shimple
Writing to src/output/safetyTest/safetyTestCode.iftest.Test1.shimple
Writing to src/output/safetyTest/safetyTestCode.iftest.Test2.shimple
Writing to src/output/safetyTest/safetyTestCode.iftest.Test3.shimple
Writing to src/output/safetyTest/safetyTestCode.iftest.Test4.shimple
Writing to src/output/safetyTest/safetyTestCode.whiletest.Test1.shimple
Writing to src/output/safetyTest/safetyTester.arraytest.Tester1$1.shimple
Writing to src/output/safetyTest/safetyTester.arraytest.Tester1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester1$1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester2$1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester2.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester3$1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester3.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester4$1.shimple
Writing to src/output/safetyTest/safetyTester.iftest.Tester4.shimple
Writing to src/output/safetyTest/safetyTester.whiletest.Tester1$1.shimple
Writing to src/output/safetyTest/safetyTester.whiletest.Tester1.shimple
Writing to src/output/safetyTest/SelfCompositionTest.NoLeak1$1.shimple
Writing to src/output/safetyTest/SelfCompositionTest.NoLeak1.shimple
Soot finished on Thu Jun 09 01:34:54 EDT 2016
Soot has run for 0 min. 0 sec.
[36msafetyTester.arraytest.Tester1... Test started...[0m
[36msize == 0[0m
[36msize == 0[0m
[36merrorRootQueue = [L26-D14][0m
[36merror root # = 1[0m
[31m>>>>>>[0m[36mr0 := @this: safetyTestCode.arraytest.Test1[0m
[31mafterStore=(store Global_safetyTestCode.arraytest.Test1_1 1 1)[0m
[31m>>>>>>[0m[36mb0 = 3[0m
[36mrightZ3=3[0m
[36mleftZ3=b0__test_0_13[0m
[33meq2=(= b0__test_0_13 3)[0m
[31m>>>>>>[0m[36mr1 = newarray (int)[2][0m
[36mrightZ3=1[0m
[36mleftZ3=r1__test_0[0m
[33meq=(and (= |int[]__test_0_12| (store |int[]| 1 1))
     (= |Global_realArray_int[]_2| (store |Global_realArray_int[]_1| 1 array_1)))[0m
[31m>>>>>>[0m[36mr1[0] = 10[0m
[36mrightZ3=10[0m
[36mleftZ3=(select (select |Global_realArray_int[]_2| (select |int[]__test_0_12| 1)) 0)[0m
[33meq2=(let ((a!1 (= array_2
              (store (select |Global_realArray_int[]_2|
                             (select |int[]__test_0_12| 1))
                     0
                     10))))
  (and a!1
       (= |Global_realArray_int[]_3|
          (store |Global_realArray_int[]_2|
                 (select |int[]__test_0_12| 1)
                 array_2))))[0m
[31m>>>>>>[0m[36mr1[0] = 15[0m
[36mrightZ3=15[0m
[36mleftZ3=(select (select |Global_realArray_int[]_3| (select |int[]__test_0_12| 1)) 0)[0m
[33meq2=(let ((a!1 (= array_3
              (store (select |Global_realArray_int[]_3|
                             (select |int[]__test_0_12| 1))
                     0
                     15))))
  (and a!1
       (= |Global_realArray_int[]_4|
          (store |Global_realArray_int[]_3|
                 (select |int[]__test_0_12| 1)
                 array_3))))[0m
[31m>>>>>>[0m[36mr1[1] = 20[0m
[36mrightZ3=20[0m
[36mleftZ3=(select (select |Global_realArray_int[]_4| (select |int[]__test_0_12| 1)) 1)[0m
[33meq2=(let ((a!1 (= array_4
              (store (select |Global_realArray_int[]_4|
                             (select |int[]__test_0_12| 1))
                     1
                     20))))
  (and a!1
       (= |Global_realArray_int[]_5|
          (store |Global_realArray_int[]_4|
                 (select |int[]__test_0_12| 1)
                 array_4))))[0m
[31m>>>>>>[0m[36mr2 = newarray (int)[2][0m
[36mrightZ3=2[0m
[36mleftZ3=r2__test_0[0m
[33meq=(and (= |int[]__test_0_8| (store |int[]__test_0_12| 2 2))
     (= |Global_realArray_int[]_6| (store |Global_realArray_int[]_5| 2 array_5)))[0m
[31m>>>>>>[0m[36mr2[0] = 30[0m
[36mrightZ3=30[0m
[36mleftZ3=(select (select |Global_realArray_int[]_6| (select |int[]__test_0_8| 2)) 0)[0m
[33meq2=(let ((a!1 (= array_6
              (store (select |Global_realArray_int[]_6|
                             (select |int[]__test_0_8| 2))
                     0
                     30))))
  (and a!1
       (= |Global_realArray_int[]_7|
          (store |Global_realArray_int[]_6|
                 (select |int[]__test_0_8| 2)
                 array_6))))[0m
[31m>>>>>>[0m[36mr2[1] = 40[0m
[36mrightZ3=40[0m
[36mleftZ3=(select (select |Global_realArray_int[]_7| (select |int[]__test_0_8| 2)) 1)[0m
[33meq2=(let ((a!1 (= array_7
              (store (select |Global_realArray_int[]_7|
                             (select |int[]__test_0_8| 2))
                     1
                     40))))
  (and a!1
       (= |Global_realArray_int[]_8|
          (store |Global_realArray_int[]_7|
                 (select |int[]__test_0_8| 2)
                 array_7))))[0m
[31m>>>>>>[0m[36mstaticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, 2)[0m
[33m(let ((a!1 (store (select |Global_realArray_int[]_8|
                          (select |int[]__test_0_8| 2))
                  0
                  (select (select |Global_realArray_int[]_8|
                                  (select |int[]__test_0_8| 1))
                          0)))
      (a!2 (store array_8
                  1
                  (select (select |Global_realArray_int[]_8|
                                  (select |int[]__test_0_8| 1))
                          1))))
  (and (= array_8 a!1)
       (= array_9 a!2)
       (= |Global_realArray_int[]_9|
          (store |Global_realArray_int[]_8| 0 array_9))))[0m
[31m>>>>>>[0m[36m$i1 = r1[1][0m
[36mrightZ3=(select (select |Global_realArray_int[]_9| (select |int[]__test_0_8| 1)) 1)[0m
[36mleftZ3=$i1__test_0_4[0m
[33meq2=(= $i1__test_0_4
   (select (select |Global_realArray_int[]_9| (select |int[]__test_0_8| 1)) 1))[0m
[31m>>>>>>[0m[36mif $i1 == 20 goto return[0m
[36m******root=L26-D14[0m
[32m********************
 L26-D14[0m
[32mError path is not feasible.[0m
[32m********************[0m
[32m********************
 <safetyTestCode.arraytest.Test1: void test()>[0m
[32mError path is not feasible.[0m
[32m********************[0m
[36msafetyTester.arraytest.Tester1... Test finished...[0m
>>> creating .ps files
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Ended ...
