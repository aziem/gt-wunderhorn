digraph { 
	ratio="fill";
	size="8.3,11.7!";
	margin=0;
	"L0-D0" -> "L1-D1"[label="return"];
	"L1-D1" -> "L2-D2"[label="if $z0 == 0 goto return"];
	"L1-D1" -> "L3-D2"[label="staticinvoke <safetyChecker.ErrorLable: void Error()>()"];
	"L3-D2" -> "L4-D3"[label="if $z0 == 0 goto return"];
	"L4-D3" -> "L5-D4"[label="$z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r1, r2)"];
	"L5-D4" -> "L6-D5"[label="r2[9] = 9"];
	"L6-D5" -> "L7-D6"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L7-D6" -> "L8-D7"[label="i1_1 = Phi(i1, i1_2)"];
	"L8-D7" -> "L10-D8"[label="i1_2 = i1_1 + 1"];
	"L8-D7" -> "L9-D8"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L10-D8" -> "L12-D9"[label="r2[i1_1] = i1_1"];
	"L9-D8" -> "L11-D9"[label="i1 = 0"];
	"L12-D9" -> "L14-D10"[label="r1[i1_1] = i1_1"];
	"L11-D9" -> "L13-D10"[label="r2 = newarray (int)[i0]"];
	"L14-D10" -> "L16-D11"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L13-D10" -> "L15-D11"[label="r1 = newarray (int)[i0]"];
	"L16-D11" -> "L18-D12"[label="i1_1 = Phi(i1, i1_2)"];
	"L15-D11" -> "L17-D12"[label="i0 := @parameter0: int"];
	"L18-D12" -> "L21-D13"[label="i1_2 = i1_1 + 1"];
	"L18-D12" -> "L20-D13"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L17-D12" -> "L19-D13"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L21-D13" -> "L23-D14"[label="r2[i1_1] = i1_1"];
	"L20-D13" -> "L22-D14"[label="i1 = 0"];
	"L23-D14" -> "L25-D15"[label="r1[i1_1] = i1_1"];
	"L22-D14" -> "L24-D15"[label="r2 = newarray (int)[i0]"];
	"L25-D15" -> "L27-D16"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L24-D15" -> "L26-D16"[label="r1 = newarray (int)[i0]"];
	"L27-D16" -> "L29-D17"[label="i1_1 = Phi(i1, i1_2)"];
	"L26-D16" -> "L28-D17"[label="i0 := @parameter0: int"];
	"L29-D17" -> "L32-D18"[label="i1_2 = i1_1 + 1"];
	"L29-D17" -> "L31-D18"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L28-D17" -> "L30-D18"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L32-D18" -> "L34-D19"[label="r2[i1_1] = i1_1"];
	"L31-D18" -> "L33-D19"[label="i1 = 0"];
	"L34-D19" -> "L36-D20"[label="r1[i1_1] = i1_1"];
	"L33-D19" -> "L35-D20"[label="r2 = newarray (int)[i0]"];
	"L36-D20" -> "L38-D21"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L35-D20" -> "L37-D21"[label="r1 = newarray (int)[i0]"];
	"L38-D21" -> "L40-D22"[label="i1_1 = Phi(i1, i1_2)"];
	"L37-D21" -> "L39-D22"[label="i0 := @parameter0: int"];
	"L40-D22" -> "L42-D23"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L40-D22" -> "L43-D23"[label="i1_2 = i1_1 + 1"];
	"L39-D22" -> "L41-D23"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L42-D23" -> "L44-D24"[label="i1 = 0"];
	"L43-D23" -> "L45-D24"[label="r2[i1_1] = i1_1"];
	"L44-D24" -> "L46-D25"[label="r2 = newarray (int)[i0]"];
	"L45-D24" -> "L47-D25"[label="r1[i1_1] = i1_1"];
	"L46-D25" -> "L48-D26"[label="r1 = newarray (int)[i0]"];
	"L47-D25" -> "L49-D26"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L48-D26" -> "L50-D27"[label="i0 := @parameter0: int"];
	"L49-D26" -> "L51-D27"[label="i1_1 = Phi(i1, i1_2)"];
	"L50-D27" -> "L52-D28"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L51-D27" -> "L54-D28"[label="i1_2 = i1_1 + 1"];
	"L51-D27" -> "L53-D28"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L54-D28" -> "L56-D29"[label="r2[i1_1] = i1_1"];
	"L53-D28" -> "L55-D29"[label="i1 = 0"];
	"L56-D29" -> "L58-D30"[label="r1[i1_1] = i1_1"];
	"L55-D29" -> "L57-D30"[label="r2 = newarray (int)[i0]"];
	"L58-D30" -> "L60-D31"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L57-D30" -> "L59-D31"[label="r1 = newarray (int)[i0]"];
	"L60-D31" -> "L62-D32"[label="i1_1 = Phi(i1, i1_2)"];
	"L59-D31" -> "L61-D32"[label="i0 := @parameter0: int"];
	"L62-D32" -> "L64-D33"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L62-D32" -> "L65-D33"[label="i1_2 = i1_1 + 1"];
	"L61-D32" -> "L63-D33"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L64-D33" -> "L66-D34"[label="i1 = 0"];
	"L65-D33" -> "L67-D34"[label="r2[i1_1] = i1_1"];
	"L66-D34" -> "L68-D35"[label="r2 = newarray (int)[i0]"];
	"L67-D34" -> "L69-D35"[label="r1[i1_1] = i1_1"];
	"L68-D35" -> "L70-D36"[label="r1 = newarray (int)[i0]"];
	"L69-D35" -> "L71-D36"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L70-D36" -> "L72-D37"[label="i0 := @parameter0: int"];
	"L71-D36" -> "L73-D37"[label="i1_1 = Phi(i1, i1_2)"];
	"L72-D37" -> "L74-D38"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L73-D37" -> "L76-D38"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L73-D37" -> "L75-D38"[label="i1_2 = i1_1 + 1"];
	"L76-D38" -> "L78-D39"[label="i1 = 0"];
	"L75-D38" -> "L77-D39"[label="r2[i1_1] = i1_1"];
	"L78-D39" -> "L80-D40"[label="r2 = newarray (int)[i0]"];
	"L77-D39" -> "L79-D40"[label="r1[i1_1] = i1_1"];
	"L80-D40" -> "L82-D41"[label="r1 = newarray (int)[i0]"];
	"L79-D40" -> "L81-D41"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L82-D41" -> "L84-D42"[label="i0 := @parameter0: int"];
	"L81-D41" -> "L83-D42"[label="i1_1 = Phi(i1, i1_2)"];
	"L84-D42" -> "L87-D43"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L83-D42" -> "L86-D43"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L83-D42" -> "L85-D43"[label="i1_2 = i1_1 + 1"];
	"L86-D43" -> "L89-D44"[label="i1 = 0"];
	"L85-D43" -> "L88-D44"[label="r2[i1_1] = i1_1"];
	"L89-D44" -> "L91-D45"[label="r2 = newarray (int)[i0]"];
	"L88-D44" -> "L90-D45"[label="r1[i1_1] = i1_1"];
	"L91-D45" -> "L93-D46"[label="r1 = newarray (int)[i0]"];
	"L90-D45" -> "L92-D46"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L93-D46" -> "L95-D47"[label="i0 := @parameter0: int"];
	"L92-D46" -> "L94-D47"[label="i1_1 = Phi(i1, i1_2)"];
	"L95-D47" -> "L98-D48"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L94-D47" -> "L96-D48"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L94-D47" -> "L97-D48"[label="i1_2 = i1_1 + 1"];
	"L96-D48" -> "L99-D49"[label="i1 = 0"];
	"L97-D48" -> "L100-D49"[label="r2[i1_1] = i1_1"];
	"L99-D49" -> "L101-D50"[label="r2 = newarray (int)[i0]"];
	"L100-D49" -> "L102-D50"[label="r1[i1_1] = i1_1"];
	"L101-D50" -> "L103-D51"[label="r1 = newarray (int)[i0]"];
	"L102-D50" -> "L104-D51"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L103-D51" -> "L105-D52"[label="i0 := @parameter0: int"];
	"L104-D51" -> "L106-D52"[label="i1_1 = Phi(i1, i1_2)"];
	"L105-D52" -> "L107-D53"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L106-D52" -> "L109-D53"[label="i1_2 = i1_1 + 1"];
	"L106-D52" -> "L108-D53"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L109-D53" -> "L111-D54"[label="r2[i1_1] = i1_1"];
	"L108-D53" -> "L110-D54"[label="i1 = 0"];
	"L111-D54" -> "L113-D55"[label="r1[i1_1] = i1_1"];
	"L110-D54" -> "L112-D55"[label="r2 = newarray (int)[i0]"];
	"L113-D55" -> "L115-D56"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L112-D55" -> "L114-D56"[label="r1 = newarray (int)[i0]"];
	"L115-D56" -> "L117-D57"[label="i1_1 = Phi(i1, i1_2)"];
	"L114-D56" -> "L116-D57"[label="i0 := @parameter0: int"];
	"L117-D57" -> "L120-D58"[label="i1_2 = i1_1 + 1"];
	"L117-D57" -> "L119-D58"[label="goto [?= i1_1 = Phi(i1, i1_2)]"];
	"L116-D57" -> "L118-D58"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
	"L120-D58" -> "L122-D59"[label="r2[i1_1] = i1_1"];
	"L119-D58" -> "L121-D59"[label="i1 = 0"];
	"L122-D59" -> "L124-D60"[label="r1[i1_1] = i1_1"];
	"L121-D59" -> "L123-D60"[label="r2 = newarray (int)[i0]"];
	"L124-D60" -> "L126-D61"[label="if i1_1 < 10 goto r1[i1_1] = i1_1"];
	"L123-D60" -> "L125-D61"[label="r1 = newarray (int)[i0]"];
	"L126-D61" -> "L128-D62"[label="i1_1 = Phi(i1, i1_2)"];
	"L125-D61" -> "L127-D62"[label="i0 := @parameter0: int"];
	"L127-D62" -> "L129-D63"[label="r0 := @this: safetyTestCode.arraytest.Test1"];
}