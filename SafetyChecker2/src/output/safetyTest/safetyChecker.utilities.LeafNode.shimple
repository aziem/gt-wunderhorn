class safetyChecker.utilities.LeafNode extends java.lang.Object
{
    soot.SootMethod method;
    java.lang.String methodSig;
    java.lang.String classInfo;

    public void <init>(soot.SootMethod)
    {
        safetyChecker.utilities.LeafNode r0;
        soot.SootMethod r1;
        java.lang.String[] r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r13, r15, r15_1, r15_2, r15_3, r15_4, r15_5, r15_6;
        java.lang.StringBuilder $r7, $r10, $r12, $r14;

        r0 := @this: safetyChecker.utilities.LeafNode;

        r1 := @parameter0: soot.SootMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<safetyChecker.utilities.LeafNode: soot.SootMethod method> = r1;

        r15 = "";

        $z0 = virtualinvoke r1.<soot.SootMethod: boolean isPublic()>();

        if $z0 == 0 goto label1;

        r15_1 = "public ";

(0)     goto label3;

     label1:
        $z1 = virtualinvoke r1.<soot.SootMethod: boolean isProtected()>();

        if $z1 == 0 goto label2;

        r15_2 = "protected ";

(1)     goto label3;

     label2:
        $z2 = virtualinvoke r1.<soot.SootMethod: boolean isPrivate()>();

(2)     if $z2 == 0 goto label3;

(3)     r15_3 = "private ";

     label3:
        r15_4 = Phi(r15_1 #0, r15_2 #1, r15 #2, r15_3 #3);

        $z3 = virtualinvoke r1.<soot.SootMethod: boolean isStatic()>();

(4)     if $z3 == 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r15_4);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static ");

(5)     r15_5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r15_6 = Phi(r15_4 #4, r15_5 #5);

        $r3 = virtualinvoke r1.<soot.SootMethod: java.lang.String getSignature()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("<", "");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(">", "");

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r6 = r2[0];

        r0.<safetyChecker.utilities.LeafNode: java.lang.String classInfo> = $r6;

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r15_6);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = r2[1];

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<safetyChecker.utilities.LeafNode: java.lang.String methodSig> = $r11;

        return;
    }

    public java.lang.String getClassInfo()
    {
        safetyChecker.utilities.LeafNode r0;
        java.lang.String $r1;

        r0 := @this: safetyChecker.utilities.LeafNode;

        $r1 = r0.<safetyChecker.utilities.LeafNode: java.lang.String classInfo>;

        return $r1;
    }

    public soot.SootMethod getMethod()
    {
        safetyChecker.utilities.LeafNode r0;
        soot.SootMethod $r1;

        r0 := @this: safetyChecker.utilities.LeafNode;

        $r1 = r0.<safetyChecker.utilities.LeafNode: soot.SootMethod method>;

        return $r1;
    }

    public java.lang.String toString()
    {
        safetyChecker.utilities.LeafNode r0;
        java.lang.String $r1;

        r0 := @this: safetyChecker.utilities.LeafNode;

        $r1 = r0.<safetyChecker.utilities.LeafNode: java.lang.String methodSig>;

        return $r1;
    }
}
