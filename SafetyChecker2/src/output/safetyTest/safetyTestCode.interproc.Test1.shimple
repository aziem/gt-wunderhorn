public class safetyTestCode.interproc.Test1 extends java.lang.Object
{

    public void <init>()
    {
        safetyTestCode.interproc.Test1 r0;

        r0 := @this: safetyTestCode.interproc.Test1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void test(int)
    {
        safetyTestCode.interproc.Test1 r0;
        int i0, i3;
        byte b1, b2;

        r0 := @this: safetyTestCode.interproc.Test1;

        i0 := @parameter0: int;

        b1 = 1;

        b2 = 5;

        i3 = virtualinvoke r0.<safetyTestCode.interproc.Test1: int getNumber(int,int)>(b1, b2);

        if i3 != 15 goto label1;

        staticinvoke <safetyChecker.utilities.ErrorLable: void Error()>();

     label1:
        return;
    }

    public int getNumber(int, int)
    {
        safetyTestCode.interproc.Test1 r0;
        int i0, i1, i2, $i3;

        r0 := @this: safetyTestCode.interproc.Test1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<safetyTestCode.interproc.Test1: int getDouble(int)>(i1);

        i2 = i0 + $i3;

        return i2;
    }

    int getDouble(int)
    {
        safetyTestCode.interproc.Test1 r0;
        int i0, $i1;

        r0 := @this: safetyTestCode.interproc.Test1;

        i0 := @parameter0: int;

        $i1 = i0 * 2;

        return $i1;
    }
}
