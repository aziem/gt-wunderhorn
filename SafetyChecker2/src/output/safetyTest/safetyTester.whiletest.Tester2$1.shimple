class safetyTester.whiletest.Tester2$1 extends soot.BodyTransformer
{

    void <init>()
    {
        safetyTester.whiletest.Tester2$1 r0;

        r0 := @this: safetyTester.whiletest.Tester2$1;

        specialinvoke r0.<soot.BodyTransformer: void <init>()>();

        return;
    }

    protected void internalTransform(soot.Body, java.lang.String, java.util.Map)
    {
        safetyTester.whiletest.Tester2$1 r0;
        soot.Body r1;
        java.lang.String r2, r5;
        java.util.Map r3, $r6;
        soot.SootMethod r4;

        r0 := @this: safetyTester.whiletest.Tester2$1;

        r1 := @parameter0: soot.Body;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        r4 = virtualinvoke r1.<soot.Body: soot.SootMethod getMethod()>();

        r5 = virtualinvoke r4.<soot.SootMethod: java.lang.String getSignature()>();

        $r6 = <safetyTester.whiletest.Tester2: java.util.Map stores>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);

        return;
    }
}
