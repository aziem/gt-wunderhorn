public class safetyChecker.Z3ObjectFieldHandler extends java.lang.Object
{

    public void <init>()
    {
        safetyChecker.Z3ObjectFieldHandler r0;

        r0 := @this: safetyChecker.Z3ObjectFieldHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected com.microsoft.z3.Expr handleStaticFieldRef(soot.Local, boolean, safetyChecker.Z3ScriptHandler)
    {
        safetyChecker.Z3ObjectFieldHandler r0;
        soot.Local r1;
        boolean z0, $z1, $z2, $z3;
        safetyChecker.Z3ScriptHandler r2;
        com.microsoft.z3.InterpolationContext r3;
        soot.Type r4;
        java.lang.String r5, r27, r30, r35;
        java.util.Map r6, r7, $r10, $r11, $r22;
        com.microsoft.z3.Expr r8, r28, r31, r36;
        com.microsoft.z3.StringSymbol $r9;
        java.lang.Object $r12, $r13, $r14, $r17, $r19, $r24, r25, r25_1, r25_2;
        com.microsoft.z3.Sort $r15, $r18, r38;
        com.microsoft.z3.IntExpr $r16;
        com.microsoft.z3.IntSort $r20, $r21;
        com.microsoft.z3.ArraySort r26;
        safetyChecker.NewSort r29, r32, r34, r37;
        com.microsoft.z3.ArrayExpr r33;

        r0 := @this: safetyChecker.Z3ObjectFieldHandler;

        r1 := @parameter0: soot.Local;

        z0 := @parameter1: boolean;

        r2 := @parameter2: safetyChecker.Z3ScriptHandler;

        r3 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: com.microsoft.z3.InterpolationContext getIctx()>();

        r4 = interfaceinvoke r1.<soot.Local: soot.Type getType()>();

        r5 = virtualinvoke r4.<soot.Type: java.lang.String toString()>();

        r6 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.util.Map getNewSortMap()>();

        r7 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.util.Map getSortId()>();

        $z1 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label1;

        $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r25 = (com.microsoft.z3.Sort) $r24;

(0)     goto label2;

     label1:
        $r9 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.StringSymbol mkSymbol(java.lang.String)>(r5);

        r25_1 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.UninterpretedSort mkUninterpretedSort(com.microsoft.z3.Symbol)>($r9);

(1)     interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r25_1);

     label2:
        r25_2 = Phi(r25 #0, r25_1 #1);

        $r10 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.util.Map getGlobal()>();

        $z2 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z2 != 0 goto label3;

        $r20 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        $r21 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        r26 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArraySort mkArraySort(com.microsoft.z3.Sort,com.microsoft.z3.Sort)>($r20, $r21);

        r27 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.lang.String getGlobalName(java.lang.String)>(r5);

        r28 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkConst(java.lang.String,com.microsoft.z3.Sort)>(r27, r26);

        $r22 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.util.Map getGlobal()>();

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r28);

        r37 = new safetyChecker.NewSort;

        r38 = (com.microsoft.z3.Sort) r25_2;

        specialinvoke r37.<safetyChecker.NewSort: void <init>(com.microsoft.z3.Sort,com.microsoft.z3.InterpolationContext)>(r38, r3);

        r29 = r37;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r29);

     label3:
        if z0 == 0 goto label5;

        r30 = interfaceinvoke r1.<soot.Local: java.lang.String getName()>();

        $r17 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r18 = (com.microsoft.z3.Sort) $r17;

        r31 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkConst(java.lang.String,com.microsoft.z3.Sort)>(r30, $r18);

        $r19 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r32 = (safetyChecker.NewSort) $r19;

        $z3 = virtualinvoke r32.<safetyChecker.NewSort: boolean ifHasExpr(com.microsoft.z3.Expr)>(r31);

        if $z3 == 0 goto label4;

        return r31;

     label4:
        virtualinvoke r32.<safetyChecker.NewSort: void creatNewOject(com.microsoft.z3.Expr)>(r31);

        return r31;

     label5:
        $r11 = virtualinvoke r2.<safetyChecker.Z3ScriptHandler: java.util.Map getGlobal()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r33 = (com.microsoft.z3.ArrayExpr) $r12;

        $r13 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r34 = (safetyChecker.NewSort) $r13;

        r35 = interfaceinvoke r1.<soot.Local: java.lang.String getName()>();

        $r14 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r15 = (com.microsoft.z3.Sort) $r14;

        r36 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkConst(java.lang.String,com.microsoft.z3.Sort)>(r35, $r15);

        $r16 = virtualinvoke r34.<safetyChecker.NewSort: com.microsoft.z3.IntExpr getId(com.microsoft.z3.Expr)>(r36);

        r8 = virtualinvoke r3.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkSelect(com.microsoft.z3.ArrayExpr,com.microsoft.z3.Expr)>(r33, $r16);

        return r8;
    }
}
