public class safetyChecker.utilities.LogUtils extends java.lang.Object
{
    private static final int DETAIL;
    private static final int DEBUG;
    private static final int INFO;
    private static final int WARNING;
    private static final int FATAL;
    private static final int RESET;
    private static final int INFEASIBLE;
    private static final int FEASIBLE;
    private static int currentLevel;
    public static final java.lang.String ANSI_RESET;
    public static final java.lang.String ANSI_RED;
    public static final java.lang.String ANSI_GREEN;
    public static final java.lang.String ANSI_YELLOW;
    public static final java.lang.String ANSI_BLUE;
    public static final java.lang.String ANSI_PURPLE;
    public static final java.lang.String ANSI_CYAN;

    static void <clinit>()
    {
        <safetyChecker.utilities.LogUtils: int currentLevel> = 4;

        return;
    }

    public void <init>()
    {
        safetyChecker.utilities.LogUtils r0;

        r0 := @this: safetyChecker.utilities.LogUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getOutputColor(int)
    {
        int i0;
        java.lang.String r0, r0_1, r0_2, r0_3, r0_4, r0_5, r0_6, r0_7, r0_8;

        i0 := @parameter0: int;

        r0 = "\u001b[0m";

(0)     lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 100: goto label5;
            case 101: goto label6;
            case 102: goto label7;
            default: goto label8;
        };

     label1:
        r0_1 = "\u001b[34m";

(1)     goto label8;

     label2:
        r0_2 = "\u001b[36m";

(2)     goto label8;

     label3:
        r0_3 = "\u001b[33m";

(3)     goto label8;

     label4:
        r0_4 = "\u001b[31m";

(4)     goto label8;

     label5:
        r0_5 = "\u001b[0m";

(5)     goto label8;

     label6:
        r0_6 = "\u001b[32m";

(6)     goto label8;

     label7:
(7)     r0_7 = "\u001b[35m";

     label8:
        r0_8 = Phi(r0 #0, r0_1 #1, r0_2 #2, r0_3 #3, r0_4 #4, r0_5 #5, r0_6 #6, r0_7 #7);

        return r0_8;
    }

    private static transient void print(int, java.lang.Object[])
    {
        int i0, i1, $i2, i3, i3_1, i3_2, i3_3;
        java.lang.Object[] r0, r2;
        java.lang.Object r1;
        java.lang.StringBuilder $r3, $r7, $r9;
        java.io.PrintStream $r4;
        java.lang.String $r5, $r6, $r8, $r10;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        $i2 = <safetyChecker.utilities.LogUtils: int currentLevel>;

(0)     if $i2 > i0 goto label3;

        r2 = r0;

        i1 = lengthof r0;

        i3 = 0;

(1)     goto label2;

     label1:
        r1 = r2[i3_1];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        $r5 = staticinvoke <safetyChecker.utilities.LogUtils: java.lang.String getOutputColor(int)>(i0);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = staticinvoke <safetyChecker.utilities.LogUtils: java.lang.String getOutputColor(int)>(100);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r10);

(2)     i3_2 = i3_1 + 1;

     label2:
        i3_1 = Phi(i3 #1, i3_2 #2);

(3)     if i3_1 < i1 goto label1;

     label3:
        i3_3 = Phi(i3 #0, i3_1 #3);

        return;
    }

    private static transient void println(int, java.lang.Object[])
    {
        int i0, i1, $i2, i3, i3_1, i3_2, i3_3;
        java.lang.Object[] r0, r2;
        java.lang.Object r1;
        java.lang.StringBuilder $r3, $r7, $r9;
        java.io.PrintStream $r4;
        java.lang.String $r5, $r6, $r8, $r10;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        $i2 = <safetyChecker.utilities.LogUtils: int currentLevel>;

(0)     if $i2 > i0 goto label3;

        r2 = r0;

        i1 = lengthof r0;

        i3 = 0;

(1)     goto label2;

     label1:
        r1 = r2[i3_1];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        $r5 = staticinvoke <safetyChecker.utilities.LogUtils: java.lang.String getOutputColor(int)>(i0);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = staticinvoke <safetyChecker.utilities.LogUtils: java.lang.String getOutputColor(int)>(100);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

(2)     i3_2 = i3_1 + 1;

     label2:
        i3_1 = Phi(i3 #1, i3_2 #2);

(3)     if i3_1 < i1 goto label1;

     label3:
        i3_3 = Phi(i3 #0, i3_1 #3);

        return;
    }

    public static transient void debug(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void print(int,java.lang.Object[])>(1, r0);

        return;
    }

    public static transient void debugln(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(1, r0);

        return;
    }

    public static transient void info(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void print(int,java.lang.Object[])>(2, r0);

        return;
    }

    public static transient void infoln(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(2, r0);

        return;
    }

    public static transient void fatal(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void print(int,java.lang.Object[])>(4, r0);

        return;
    }

    public static transient void fatalln(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(4, r0);

        return;
    }

    public static transient void detail(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void print(int,java.lang.Object[])>(0, r0);

        return;
    }

    public static transient void detailln(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(0, r0);

        return;
    }

    public static transient void warning(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void print(int,java.lang.Object[])>(3, r0);

        return;
    }

    public static transient void warningln(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(3, r0);

        return;
    }

    public static void nextLine(int)
    {
        int i0, $i1;
        java.io.PrintStream $r0;

        i0 := @parameter0: int;

        $i1 = <safetyChecker.utilities.LogUtils: int currentLevel>;

        if $i1 > i0 goto label1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println()>();

     label1:
        return;
    }

    public static void printResult(java.lang.String, boolean)
    {
        java.lang.String r0, $r4, $r10;
        boolean z0;
        java.lang.Object[] $r1, $r5, $r6, $r7, $r11, $r12;
        java.lang.StringBuilder $r2, $r3, $r8, $r9;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("********************\n ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7[0] = $r10;

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(102, $r7);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "Error path is feasible.";

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(102, $r11);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "********************";

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(102, $r12);

        goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("********************\n ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[0] = $r4;

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(101, $r1);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "Error path is not feasible.";

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(101, $r5);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "********************";

        staticinvoke <safetyChecker.utilities.LogUtils: void println(int,java.lang.Object[])>(101, $r6);

     label2:
        return;
    }
}
