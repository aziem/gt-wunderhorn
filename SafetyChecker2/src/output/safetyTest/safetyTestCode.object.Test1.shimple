public class safetyTestCode.object.Test1 extends java.lang.Object
{

    public void <init>()
    {
        safetyTestCode.object.Test1 r0;

        r0 := @this: safetyTestCode.object.Test1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void test()
    {
        safetyTestCode.object.Test1 r0;
        safetyTestCode.object.Obj r1, $r2;
        byte b0, b1, $b6, b7, b8;
        long l2, l3, $l5;
        int $i4;

        r0 := @this: safetyTestCode.object.Test1;

        $r2 = new safetyTestCode.object.Obj;

        specialinvoke $r2.<safetyTestCode.object.Obj: void <init>()>();

        r1 = $r2;

        b7 = 3;

        b0 = 2;

        b1 = b7;

        l2 = 23L;

        l3 = (long) b1;

        $i4 = (int) l2;

        b8 = (byte) $i4;

        $l5 = l2 - 20L;

        $b6 = l3 cmp $l5;

        if $b6 != 0 goto label1;

        staticinvoke <safetyChecker.ErrorLable: void Error()>();

     label1:
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0, r3;
        java.io.BufferedReader r1, $r5;
        java.io.PrintWriter r2, $r8;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i4_1, i5_1, i4_2, i5_2, i6_1, i6_2, i6_3, i7_1, i8_1, i9_1, i9_2, i7_2, i8_2, i7_3, i8_3, i7_4, i8_4, i9_3;
        int[] r4;
        java.io.InputStreamReader $r6;
        java.io.InputStream $r7;
        java.io.PrintStream $r9;
        java.lang.String $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @parameter0: java.lang.String[];

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        $r7 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        r1 = $r5;

        $r8 = new java.io.PrintWriter;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r8.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r9);

        r2 = $r8;

        $r10 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        i5 = 2;

(0)     goto label7;

     label1:
        i5_2 = i5_1 + i4_2;

        $r12 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        $r14 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        r3 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        r4 = newarray (int)[i0];

        i6_1 = 0;

(1)     goto label3;

     label2:
        $r16 = r3[i6_2];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        r4[i6_2] = $i2;

(2)     i6_3 = i6_2 + 1;

     label3:
        i6_2 = Phi(i6_1 #1, i6_3 #2);

        if i6_2 < i0 goto label2;

        i7_1 = r4[0];

        i8_1 = 1;

        i9_1 = 1;

(3)     goto label6;

     label4:
        $i3 = r4[i9_2];

(4)     if i7_2 < $i3 goto label5;

        i7_3 = r4[i9_2];

(5)     i8_3 = i8_2 + 1;

     label5:
        i7_4 = Phi(i7_2 #4, i7_3 #5);

        i8_4 = Phi(i8_2 #4, i8_3 #5);

(6)     i9_3 = i9_2 + 1;

     label6:
        i9_2 = Phi(i9_1 #3, i9_3 #6);

        i7_2 = Phi(i7_1 #3, i7_4 #6);

        i8_2 = Phi(i8_1 #3, i8_4 #6);

        if i9_2 < i0 goto label4;

(7)     virtualinvoke r2.<java.io.PrintWriter: void println(int)>(i8_2);

     label7:
        i4_1 = Phi(i4 #0, i4_2 #7);

        i9 = Phi(i9 #0, i9_2 #7);

        i5_1 = Phi(i5 #0, i5_2 #7);

        i7 = Phi(i7 #0, i7_2 #7);

        i6 = Phi(i6 #0, i6_2 #7);

        i8 = Phi(i8 #0, i8_2 #7);

        $i1 = i4_1;

        i4_2 = i4_1 + -1;

        if $i1 > 0 goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void close()>();

        if i5_1 != 3 goto label8;

        staticinvoke <safetyChecker.ErrorLable: void Error()>();

     label8:
        return;
    }
}
