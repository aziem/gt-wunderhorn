public class safetyChecker.z3ScriptManager.Z3StringHandler extends java.lang.Object
{

    public void <init>()
    {
        safetyChecker.z3ScriptManager.Z3StringHandler r0;

        r0 := @this: safetyChecker.z3ScriptManager.Z3StringHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.microsoft.z3.BoolExpr covertString(soot.jimple.StringConstant, safetyChecker.z3ScriptManager.Z3ScriptHandler, com.microsoft.z3.Expr)
    {
        soot.jimple.StringConstant r0;
        safetyChecker.z3ScriptManager.Z3ScriptHandler r1;
        com.microsoft.z3.Expr r2, $r20, r37, r42;
        java.lang.String r3, r6, $r13, r36, r45;
        com.microsoft.z3.InterpolationContext r4;
        com.microsoft.z3.BoolExpr[] r5, $r25;
        com.microsoft.z3.BoolExpr r7, $r16, $r26, r43;
        int $i0, $i1, i2, i3, i3_1, i3_2;
        java.util.Map $r8, $r17, $r21, $r23, $r30, $r32;
        boolean $z0;
        com.microsoft.z3.IntSort $r9, $r10, $r14, $r15, $r27, $r28, $r29;
        java.lang.StringBuilder $r11, $r12;
        java.lang.Object $r18;
        com.microsoft.z3.Sort $r19;
        com.microsoft.z3.ArraySort r34, r35;
        com.microsoft.z3.ArrayExpr r39, r44, r46, r47;
        char c4;
        com.microsoft.z3.IntNum r40, r41;

        r0 := @parameter0: soot.jimple.StringConstant;

        r1 := @parameter1: safetyChecker.z3ScriptManager.Z3ScriptHandler;

        r2 := @parameter2: com.microsoft.z3.Expr;

        r3 = r0.<soot.jimple.StringConstant: java.lang.String value>;

        r4 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: com.microsoft.z3.InterpolationContext getIctx()>();

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        r5 = newarray (com.microsoft.z3.BoolExpr)[$i0];

        r6 = "realString";

        $r8 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getGlobal()>();

        $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z0 != 0 goto label1;

        $r27 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        $r28 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        r34 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArraySort mkArraySort(com.microsoft.z3.Sort,com.microsoft.z3.Sort)>($r27, $r28);

        $r29 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        r35 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArraySort mkArraySort(com.microsoft.z3.Sort,com.microsoft.z3.Sort)>($r29, r34);

        r36 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.lang.String getGlobalName(java.lang.String)>(r6);

        r37 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkConst(java.lang.String,com.microsoft.z3.Sort)>(r36, r35);

        $r30 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getSubstitute()>();

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, r6);

        $r32 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getGlobal()>();

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r37);

     label1:
        $r9 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        $r10 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArraySort mkArraySort(com.microsoft.z3.Sort,com.microsoft.z3.Sort)>($r9, $r10);

        i2 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: int getRealArraySize(java.lang.String)>(r6);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("string");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        $r15 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntSort getIntSort()>();

        r39 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArrayExpr mkArrayConst(java.lang.String,com.microsoft.z3.Sort,com.microsoft.z3.Sort)>($r13, $r14, $r15);

        i3 = 0;

(0)     goto label3;

     label2:
        c4 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i3_1);

        r40 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntNum mkInt(int)>(c4);

        r41 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.IntNum mkInt(int)>(i3_1);

        r42 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkSelect(com.microsoft.z3.ArrayExpr,com.microsoft.z3.Expr)>(r39, r41);

        $r16 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkEq(com.microsoft.z3.Expr,com.microsoft.z3.Expr)>(r42, r40);

        r5[i3_1] = $r16;

(1)     i3_2 = i3_1 + 1;

     label3:
        i3_1 = Phi(i3 #0, i3_2 #1);

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if i3_1 < $i1 goto label2;

        r43 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkAnd(com.microsoft.z3.BoolExpr[])>(r5);

        $r17 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getGlobal()>();

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r44 = (com.microsoft.z3.ArrayExpr) $r18;

        r45 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.lang.String getGlobalName(java.lang.String)>(r6);

        $r19 = virtualinvoke r44.<com.microsoft.z3.ArrayExpr: com.microsoft.z3.Sort getSort()>();

        $r20 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Expr mkConst(java.lang.String,com.microsoft.z3.Sort)>(r45, $r19);

        r46 = (com.microsoft.z3.ArrayExpr) $r20;

        r47 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.ArrayExpr mkStore(com.microsoft.z3.ArrayExpr,com.microsoft.z3.Expr,com.microsoft.z3.Expr)>(r44, r2, r39);

        r7 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkEq(com.microsoft.z3.Expr,com.microsoft.z3.Expr)>(r46, r47);

        $r21 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getGlobal()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r46);

        $r23 = virtualinvoke r1.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getSubstitute()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r45, r6);

        $r25 = newarray (com.microsoft.z3.BoolExpr)[2];

        $r25[0] = r43;

        $r25[1] = r7;

        $r26 = virtualinvoke r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkAnd(com.microsoft.z3.BoolExpr[])>($r25);

        return $r26;
    }

    static boolean ifStringType(soot.Type)
    {
        soot.Type r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: soot.Type;

        r1 = virtualinvoke r0.<soot.Type: java.lang.String toString()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static com.microsoft.z3.Expr z3NewString(safetyChecker.z3ScriptManager.Z3ScriptHandler)
    {
        safetyChecker.z3ScriptManager.Z3ScriptHandler r0;
        java.util.Map r1, r2;
        safetyChecker.NewSort r3, r11, r13;
        boolean $z0, $z1;
        com.microsoft.z3.InterpolationContext $r4, $r6;
        com.microsoft.z3.Expr $r7, $r10;
        java.lang.Object $r8, $r9, r12, r12_1, r12_2;
        com.microsoft.z3.Sort r14;

        r0 := @parameter0: safetyChecker.z3ScriptManager.Z3ScriptHandler;

        r1 = virtualinvoke r0.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getSortId()>();

        r2 = virtualinvoke r0.<safetyChecker.z3ScriptManager.Z3ScriptHandler: java.util.Map getNewSortMap()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("StringType");

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("StringType");

        r11 = (safetyChecker.NewSort) $r9;

        $r10 = virtualinvoke r11.<safetyChecker.NewSort: com.microsoft.z3.Expr getNewObject()>();

        return $r10;

     label1:
        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("StringType");

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("StringType");

        r12 = (com.microsoft.z3.Sort) $r8;

(0)     goto label3;

     label2:
        $r4 = virtualinvoke r0.<safetyChecker.z3ScriptManager.Z3ScriptHandler: com.microsoft.z3.InterpolationContext getIctx()>();

        r12_1 = virtualinvoke $r4.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.UninterpretedSort mkUninterpretedSort(java.lang.String)>("StringType");

(1)     interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("StringType", r12_1);

     label3:
        r12_2 = Phi(r12 #0, r12_1 #1);

        r13 = new safetyChecker.NewSort;

        $r6 = virtualinvoke r0.<safetyChecker.z3ScriptManager.Z3ScriptHandler: com.microsoft.z3.InterpolationContext getIctx()>();

        r14 = (com.microsoft.z3.Sort) r12_2;

        specialinvoke r13.<safetyChecker.NewSort: void <init>(com.microsoft.z3.Sort,com.microsoft.z3.InterpolationContext)>(r14, $r6);

        r3 = r13;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("StringType", r3);

        $r7 = virtualinvoke r3.<safetyChecker.NewSort: com.microsoft.z3.Expr getNewObject()>();

        return $r7;
    }
}
