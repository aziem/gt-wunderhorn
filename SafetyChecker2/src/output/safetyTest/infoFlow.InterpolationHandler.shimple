public class infoFlow.InterpolationHandler extends java.lang.Object
{
    private com.microsoft.z3.InterpolationContext ictx;

    public void <init>(com.microsoft.z3.InterpolationContext)
    {
        infoFlow.InterpolationHandler r0;
        com.microsoft.z3.InterpolationContext r1;

        r0 := @this: infoFlow.InterpolationHandler;

        r1 := @parameter0: com.microsoft.z3.InterpolationContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx> = r1;

        return;
    }

    public com.microsoft.z3.BoolExpr createInterpolant(java.util.HashSet)
    {
        infoFlow.InterpolationHandler r0;
        java.util.HashSet r1;
        infoFlow.Edge r2;
        com.microsoft.z3.BoolExpr r3, r4, r43, r46, r43_1, r43_2, r46_1, r46_2, r46_3, r46_4, r43_3;
        java.lang.Object[] $r5, $r7, $r11, $r12, $r16, $r22, $r27, $r33, $r34, $r37, $r42;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r13, $r14, $r17, $r18, $r23, $r24, $r28, $r29, $r38, $r40;
        int $i0, i1, i1_1, i1_2;
        java.lang.String $r10, $r15, $r19, $r25, $r30, $r41;
        com.microsoft.z3.BoolExpr[] $r20;
        com.microsoft.z3.InterpolationContext $r21, $r26, $r35, $r36;
        infoFlow.Vertex $r31, $r32, r45, r45_1, r45_2, r45_3;
        com.microsoft.z3.enumerations.Z3_lbool $r39;
        java.util.Iterator r44;
        com.microsoft.z3.Params r47;
        com.microsoft.z3.InterpolationContext$ComputeInterpolantResult r48;

        r0 := @this: infoFlow.InterpolationHandler;

        r1 := @parameter0: java.util.HashSet;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = ">>>>>> InterpolationHandler.createInterpolant";

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r5);

        r43 = null;

        i1 = 1;

        r44 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

(0)     goto label7;

     label1:
        $r6 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45_1 = (infoFlow.Vertex) $r6;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("root # ");

        $i0 = i1_1;

        i1_2 = i1_1 + 1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7[0] = $r10;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r7);

(1)     goto label6;

     label2:
        r2 = virtualinvoke r45_2.<infoFlow.Vertex: infoFlow.Edge getOutgoingEdge()>();

        $z1 = virtualinvoke r2.<infoFlow.Edge: boolean isErrorEdge()>();

        if $z1 == 0 goto label3;

(2)     goto label7;

     label3:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "----------------";

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r11);

        r3 = virtualinvoke r45_2.<infoFlow.Vertex: com.microsoft.z3.BoolExpr getInvariant()>();

        $r12 = newarray (java.lang.Object)[1];

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("currentInterpolant = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12[0] = $r15;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r12);

        r4 = virtualinvoke r2.<infoFlow.Edge: com.microsoft.z3.BoolExpr getZ3Expr()>();

        $r16 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("z3Expr = ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16[0] = $r19;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r16);

        $z2 = virtualinvoke r45_2.<infoFlow.Vertex: boolean isHeadLocation()>();

        if $z2 == 0 goto label4;

        r46_2 = r4;

(3)     goto label5;

     label4:
        $r21 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        $r20 = newarray (com.microsoft.z3.BoolExpr)[2];

        $r20[0] = r4;

        $r20[1] = r3;

(4)     r46_3 = virtualinvoke $r21.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkOr(com.microsoft.z3.BoolExpr[])>($r20);

     label5:
        r46_4 = Phi(r46_2 #3, r46_3 #4);

        $r22 = newarray (java.lang.Object)[1];

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("disjunction = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46_4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22[0] = $r25;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r22);

        $r26 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        r43_3 = virtualinvoke $r26.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr MkInterpolant(com.microsoft.z3.BoolExpr)>(r46_4);

        $r27 = newarray (java.lang.Object)[1];

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("interpolant = ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43_3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27[0] = $r30;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r27);

        $r31 = virtualinvoke r2.<infoFlow.Edge: infoFlow.Vertex getTarget()>();

        virtualinvoke $r31.<infoFlow.Vertex: void setInvariant(com.microsoft.z3.BoolExpr)>(r43_3);

        $r32 = virtualinvoke r2.<infoFlow.Edge: infoFlow.Vertex getTarget()>();

        virtualinvoke $r32.<infoFlow.Vertex: void setInvariant(com.microsoft.z3.BoolExpr)>(r46_4);

(5)     r45_3 = virtualinvoke r45_2.<infoFlow.Vertex: infoFlow.Vertex getNextVertex()>();

     label6:
        r45_2 = Phi(r45_1 #1, r45_3 #5);

        r43_2 = Phi(r43_1 #1, r43_3 #5);

        r46_1 = Phi(r46 #1, r46_4 #5);

(6)     if r45_2 != null goto label2;

     label7:
        r45 = Phi(r45 #0, r45_2 #2, r45_2 #6);

        r43_1 = Phi(r43 #0, r43_2 #2, r43_2 #6);

        r46 = Phi(r46 #0, r46_1 #2, r46_1 #6);

        i1_1 = Phi(i1 #0, i1_2 #2, i1_2 #6);

        $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = "********** interpolant*************";

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r33);

        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = r43_1;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r34);

        $r35 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        r47 = virtualinvoke $r35.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.Params mkParams()>();

        $r36 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        r48 = virtualinvoke $r36.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.InterpolationContext$ComputeInterpolantResult ComputeInterpolant(com.microsoft.z3.Expr,com.microsoft.z3.Params)>(r43_1, r47);

        $r37 = newarray (java.lang.Object)[1];

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("result=");

        $r39 = r48.<com.microsoft.z3.InterpolationContext$ComputeInterpolantResult: com.microsoft.z3.enumerations.Z3_lbool status>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37[0] = $r41;

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r37);

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = "<<<<<< InterpolationHandler.createInterpolant";

        staticinvoke <infoFlow.LogUtils: void infoln(java.lang.Object[])>($r42);

        return null;
    }

    private void addInvariant(infoFlow.Vertex, com.microsoft.z3.BoolExpr)
    {
        infoFlow.InterpolationHandler r0;
        infoFlow.Vertex r1;
        com.microsoft.z3.BoolExpr r2;

        r0 := @this: infoFlow.InterpolationHandler;

        r1 := @parameter0: infoFlow.Vertex;

        r2 := @parameter1: com.microsoft.z3.BoolExpr;

        return;
    }

    public com.microsoft.z3.BoolExpr getTrueInvariant()
    {
        infoFlow.InterpolationHandler r0;
        com.microsoft.z3.InterpolationContext $r1;
        com.microsoft.z3.BoolExpr $r2;

        r0 := @this: infoFlow.InterpolationHandler;

        $r1 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        $r2 = virtualinvoke $r1.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkTrue()>();

        return $r2;
    }

    public com.microsoft.z3.BoolExpr getFalseInvariant()
    {
        infoFlow.InterpolationHandler r0;
        com.microsoft.z3.InterpolationContext $r1;
        com.microsoft.z3.BoolExpr $r2;

        r0 := @this: infoFlow.InterpolationHandler;

        $r1 = r0.<infoFlow.InterpolationHandler: com.microsoft.z3.InterpolationContext ictx>;

        $r2 = virtualinvoke $r1.<com.microsoft.z3.InterpolationContext: com.microsoft.z3.BoolExpr mkFalse()>();

        return $r2;
    }
}
