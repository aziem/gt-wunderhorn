public class toy_benchmark.ToyBenchmark4 extends java.lang.Object
{

    public void <init>()
    {
        toy_benchmark.ToyBenchmark4 r0;

        r0 := @this: toy_benchmark.ToyBenchmark4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void test1()
    {
        toy_benchmark.Node r0, r1, $r2, $r3, $r4, $r5, r6, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        byte b10;

        b10 = 1;

        $r2 = new toy_benchmark.Node;

        specialinvoke $r2.<toy_benchmark.Node: void <init>()>();

        r0 = $r2;

        $r3 = new toy_benchmark.Node;

        specialinvoke $r3.<toy_benchmark.Node: void <init>()>();

        r6 = $r3;

        $r4 = new toy_benchmark.Node;

        specialinvoke $r4.<toy_benchmark.Node: void <init>()>();

        r1 = $r4;

        r0.<toy_benchmark.Node: toy_benchmark.Node next> = r1;

        $r5 = r0.<toy_benchmark.Node: toy_benchmark.Node next>;

        $r5.<toy_benchmark.Node: int size> = 7;

        r1.<toy_benchmark.Node: int size> = 10;

        r6.<toy_benchmark.Node: int size> = 9;

        if b10 >= 5 goto label3;

        $i1 = b10 % 2;

        if $i1 != 0 goto label1;

        $i4 = r6.<toy_benchmark.Node: int size>;

        $i5 = $i4 + 1;

        r6.<toy_benchmark.Node: int size> = $i5;

        $i6 = r6.<toy_benchmark.Node: int size>;

        $i7 = $i6 + 1;

        r6.<toy_benchmark.Node: int size> = $i7;

        $i8 = r6.<toy_benchmark.Node: int size>;

        $i9 = $i8 + 1;

        r6.<toy_benchmark.Node: int size> = $i9;

        goto label2;

     label1:
        $i2 = r6.<toy_benchmark.Node: int size>;

        $i3 = $i2 - 1;

        r6.<toy_benchmark.Node: int size> = $i3;

     label2:
        i11 = b10 + 1;

     label3:
        r7 = r0;

        i0 = r7.<toy_benchmark.Node: int size>;

        staticinvoke <toy_benchmark.ErrorFunction: void Error1(int)>(i0);

        return;
    }
}
