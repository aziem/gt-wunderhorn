This file contains a list of open issues for the safety checker. Each
item is tagged with the developer who's actively working on it.

--------------------------------------------------------------------------------

Unsupported language features:

-Programs containing multiple, user-defined methods (Burak)
******
when the program calls a method that could be overwritten by a subclass

[9:29]  
so `class A { int f() { … } } class B extends A { int f () { … } }`

[9:29]  
then in the code, `A x = …; x.f()`

[9:30]  
the analysis has to model the fact that `x` could have dynamic class `A` or `B`


******
-Multi-dimensional arrays (Burak)

-Overflow and underflow

--------------------------------------------------------------------------------

Usability features:

-Frontend that allows users to specify searching for classes of
 runtime exceptions. In particular:

  +ArrayOutOfBoundsException

  +ClassCastException

  +NullPointerException

--------------------------------------------------------------------------------

Convergence optimizations: optimizations that could help the checker
find inductive invariants

-path refinement

  +interpolate over an unsatisfiable core of the path formula

--------------------------------------------------------------------------------

Performance optimizations: optimizations that could improve
performance without affecting intermediate results computed

-Path refinement:

  +use Z3 backtracking across multiple queries
