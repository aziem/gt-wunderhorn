public class Solution {
public int countNodes(TreeNode root) {
    if(root == null)
        return 0;
        
    return help(root);
}

public int help(TreeNode t1)
{
    if(t1 == null)
        return 0;
    //1    
    int Lheight = getLeftHeight(t1);
    //0
    int Rheight = getRightHeight(t1);
    
    if(Lheight == Rheight && (Lheight != 0))
    {
       return (1<<Lheight)-1;
    }
    else if(Lheight == Rheight && (Lheight == 0))
    {
        return 1;
    }
        //return (int)Math.pow(2,Lheight)-1;
    else
    {
        return 1+help(t1.left)+help(t1.right);
    }
}

public int getLeftHeight(TreeNode t2)
{
    if(t2 == null)
        return 0;
    else
    {
        return 1+getLeftHeight(t2.left);
    }
}

public int getRightHeight(TreeNode t2)
{
    if(t2 == null)
        return 0;
    else
    {
        return 1+getRightHeight(t2.right);
    }
}
