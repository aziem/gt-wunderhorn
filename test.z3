(set-option :fixedpoint.engine "duality")
(declare-rel __THE_QUERY__ (Int))
(declare-var $T0_27_0 Int)
(declare-var $T0_27_1 Int)
(declare-var $bcvar1_0 Int)
(declare-var $bcvar1_1 Int)
(declare-var $bcvar2_0 Int)
(declare-var $bcvar2_1 Int)
(declare-var $irvar0_0 Int)
(declare-var $irvar0_1 Int)
(declare-var DUMMY_0 Int)
(declare-var p0_ret_1 Int)
(declare-rel p0_11 (Int))
(declare-rel p0_2 (Int Int Int))
(declare-rel p0_7 (Int Int))
(declare-rel q0 (Int))
(rule (=> (and (= $bcvar1_1 0) (= $bcvar2_1 40)) (p0_2 $bcvar1_1 $bcvar2_1 $irvar0_0)))
(rule (=> (not (=> (p0_11 $T0_27_0) (= $T0_27_0 1))) (q0 $T0_27_0)))
(rule (=> (and (p0_11 $T0_27_0) (= p0_ret_1 DUMMY_0)) true))
(rule (=> (and (p0_2 $bcvar1_0 $bcvar2_0 $irvar0_0) (not (>= $bcvar1_0 $bcvar2_0)) (= $irvar0_1 2) (= $bcvar1_1 (+ $bcvar1_1 $irvar0_1))) (p0_2 $bcvar1_1 $bcvar2_0 $irvar0_1)))
(rule (=> (and (p0_2 $bcvar1_0 $bcvar2_0 $irvar0_0) (>= $bcvar1_0 $bcvar2_0) (= $irvar0_1 38)) (p0_7 $bcvar1_0 $irvar0_1)))
(rule (=> (and (p0_7 $bcvar1_0 $irvar0_0) (= $bcvar1_0 $irvar0_0) (= $T0_27_1 0)) (p0_11 $T0_27_1)))
(rule (=> (and (p0_7 $bcvar1_0 $irvar0_0) (not (= $bcvar1_0 $irvar0_0)) (= $T0_27_1 1)) (p0_11 $T0_27_1)))
(query q0)
